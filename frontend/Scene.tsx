/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 public/chain_link_fence_material/scene.gltf -t -r public
Author: Get Learnt w/ Chunck (https://sketchfab.com/GetLearnt)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/chain-link-fence-material-f36fc213641449db8aa8e29248868c1e
Title: Chain Link fence Material
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Sphere_Chainlink_Fence_0: THREE.Mesh
    Sphere_Chainlink_Fence_0_1: THREE.Mesh
    Sphere_Chainlink_Fence_0_2: THREE.Mesh
  }
  materials: {
    Chainlink_Fence: THREE.MeshStandardMaterial
  }
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/chain_link_fence_material/scene.gltf') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]} scale={100}>
        <mesh geometry={nodes.Sphere_Chainlink_Fence_0.geometry} material={materials.Chainlink_Fence} />
        <mesh geometry={nodes.Sphere_Chainlink_Fence_0_1.geometry} material={materials.Chainlink_Fence} />
        <mesh geometry={nodes.Sphere_Chainlink_Fence_0_2.geometry} material={materials.Chainlink_Fence} />
      </group>
    </group>
  )
}

useGLTF.preload('/chain_link_fence_material/scene.gltf')
